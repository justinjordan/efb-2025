{"mappings":"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","sources":["src/main.ts","src/states/GameState.ts","src/entities/Ball.ts","src/types/State.ts","src/entities/Layer.ts","src/states/PauseState.ts"],"sourcesContent":["import log from \"loglevel\";\nimport GameOptions from \"./types/Options\";\nimport State from \"./types/State\";\nimport GameState from \"./states/GameState\";\n\nconst defaultOptions = {\n  debug: false,\n};\n\nexport default class Efb {\n  logger = log.getLogger(\"Efb\");\n  options: GameOptions;\n  states: State[] = [];\n  running = false;\n  isVisible = true;\n\n  private lastUpdate = 0;\n\n  constructor(\n    public canvas: HTMLCanvasElement,\n    options: GameOptions = defaultOptions\n  ) {\n    this.options = { ...defaultOptions, ...options };\n\n    this.handleResize();\n    const resizeObserver = new ResizeObserver(() => this.handleResize());\n    resizeObserver.observe(this.canvas);\n\n    document.addEventListener(\"visibilitychange\", () => {\n      this.isVisible = document.visibilityState === \"visible\";\n      this.logger.debug(\"Visibility change\", this.isVisible);\n    });\n\n    this.logger.setLevel(options.debug ? \"debug\" : \"silent\");\n    this.logger.debug(\"Efb initialized with options\", this.options);\n  }\n\n  public start() {\n    this.running = true;\n    this.logger.debug(\"Efb is running\");\n\n    // Add the first state\n    const state = new GameState(this);\n    state.onEnter();\n    this.states.push(state);\n\n    // Start the game loop\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  public stop() {\n    this.running = false;\n    this.states = [];\n    this.logger.debug(\"Efb is stopped\");\n  }\n\n  public getCurrentState() {\n    return this.states?.[this.states.length - 1];\n  }\n\n  public getPreviousState() {\n    return this.states?.[this.states.length - 2];\n  }\n\n  public pushState(state: State) {\n    const lastState = this.getCurrentState();\n\n    if (lastState) {\n      // Exit the last state before entering the new one\n      lastState.onExit();\n    }\n\n    state.onEnter();\n    this.states.push(state);\n  }\n\n  public popState() {\n    const lastState = this.states.pop();\n\n    if (lastState) {\n      // Exit the last state before entering the new one\n      lastState.onExit();\n    }\n\n    const newState = this.getCurrentState();\n    newState.onEnter();\n  }\n\n  private handleResize() {\n    this.canvas.width = this.canvas.clientWidth;\n    this.canvas.height = this.canvas.clientHeight;\n\n    this.logger.debug(\"Canvas resized to\", {\n      width: this.canvas.width,\n      height: this.canvas.height,\n    });\n\n    // Resize current state\n    try {\n      const state = this.getCurrentState();\n      state?.handleResize();\n    } catch (error) {\n      this.logger.error(\"Error resizing current state\", error);\n    }\n  }\n\n  private loop(currentTime: number) {\n    let delta =\n      this.lastUpdate > 0 ? (currentTime - this.lastUpdate) / 1000 : 0;\n    this.lastUpdate = currentTime;\n\n    // Cancel the loop if the delta is too large (e.g. when tab is inactive)\n    if (delta > 1) {\n      delta = 0;\n    }\n\n    if (!this.running) {\n      this.logger.debug(\"Efb is not running, stopping loop\");\n      this.stop();\n      return;\n    }\n\n    if (this.states.length === 0) {\n      this.logger.warn(\"No states to run, stopping loop\");\n      this.stop();\n      return;\n    }\n\n    try {\n      const state = this.getCurrentState();\n\n      // Update all states\n      state.update(delta);\n\n      // Render all states\n      if (state.shouldRender && this.isVisible) {\n        state.render(this.canvas);\n      }\n\n      this.canvas.getContext(\"2d\")?.drawImage(state.canvas, 0, 0);\n    } catch (error) {\n      this.logger.error(\"Error in game loop\", error);\n    }\n\n    // Call the loop again\n    requestAnimationFrame(this.loop.bind(this));\n  }\n}\n","import Ball from \"../entities/Ball\";\nimport Layer from \"../entities/Layer\";\nimport Efb from \"../main\";\nimport State from \"../types/State\";\nimport PauseState from \"./PauseState\";\n\nexport default class GameState extends State {\n  balls: Ball[] = [];\n  ballLayer: Layer;\n  trailLayer: Layer;\n  backgroundLayer: Layer;\n\n  constructor(private readonly game: Efb) {\n    super();\n\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.game.canvas.width;\n    this.canvas.height = this.game.canvas.height;\n\n    this.ballLayer = new Layer(this.canvas);\n    this.trailLayer = new Layer(this.canvas);\n    this.backgroundLayer = new Layer(this.canvas, { backgroundColor: \"#023\" });\n\n    for (let i = 0; i < 4; i++) {\n      this.balls.push(\n        new Ball({\n          x: this.canvas.width * Math.random(),\n          y: this.canvas.height * Math.random(),\n          xSpeed: (300 * Math.random() + 200) * (Math.random() > 0.5 ? 1 : -1),\n          ySpeed: (300 * Math.random() + 200) * (Math.random() > 0.5 ? 1 : -1),\n        })\n      );\n    }\n\n    this.handleKeyup = this.handleKeyup.bind(this);\n  }\n\n  private handleKeyup(e: KeyboardEvent) {\n    if (e.key === \"p\") {\n      this.pauseGame();\n    }\n  }\n\n  public handleResize() {\n    this.ballLayer.handleResize();\n    this.trailLayer.handleResize();\n    this.backgroundLayer.handleResize();\n  }\n\n  public onEnter() {\n    document.addEventListener(\"keyup\", this.handleKeyup);\n  }\n\n  public onExit() {\n    document.removeEventListener(\"keyup\", this.handleKeyup);\n  }\n\n  public update(delta: number) {\n    this.balls.forEach((ball) => ball.update(delta));\n\n    for (let i = 0; i < this.balls.length; i++) {\n      for (let j = 0; j < this.balls.length; j++) {\n        if (i === j) continue;\n\n        const ball1 = this.balls[i];\n        const ball2 = this.balls[j];\n\n        const dx = ball1.x - ball2.x;\n        const dy = ball1.y - ball2.y;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        const dir = Math.atan2(dy, dx);\n\n        ball1.xSpeed -= 8 * dist * Math.cos(dir) * delta;\n        ball1.ySpeed -= 8 * dist * Math.sin(dir) * delta;\n      }\n    }\n\n    // bounce the balls\n    this.balls.forEach((ball) => {\n      if (ball.x < ball.radius) {\n        ball.x = ball.radius;\n        ball.xSpeed = Math.abs(ball.xSpeed);\n      }\n\n      if (ball.x > this.canvas.width - ball.radius) {\n        ball.x = this.canvas.width - ball.radius;\n        ball.xSpeed = -Math.abs(ball.xSpeed);\n      }\n\n      if (ball.y < ball.radius) {\n        ball.y = ball.radius;\n        ball.ySpeed = Math.abs(ball.ySpeed);\n      }\n\n      if (ball.y > this.canvas.height - ball.radius) {\n        ball.y = this.canvas.height - ball.radius;\n        ball.ySpeed = -Math.abs(ball.ySpeed);\n      }\n    });\n  }\n\n  public render() {\n    const ctx = this.canvas.getContext(\"2d\");\n\n    if (!ctx) {\n      throw new Error(\"Cannot get 2d context from canvas\");\n    }\n\n    this.ballLayer.withLayer((canvas, ctx) => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      this.balls.forEach((ball) => ball.render(canvas));\n    });\n\n    this.trailLayer.withLayer((canvas, ctx) => {\n      this.balls.forEach((ball) => {\n        ctx.beginPath();\n        ctx.moveTo(ball.x, ball.y);\n        ctx.lineWidth = ball.radius * 2;\n        ctx.strokeStyle = ball.color;\n        ball.pastPositions.forEach(({ x, y }) => {\n          ctx.lineTo(x, y);\n        });\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.fillStyle = ball.color;\n        ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    });\n\n    this.trailLayer = new Layer(this.canvas, this.trailLayer).withLayer(\n      (canvas, ctx) => {\n        ctx.filter = \"blur(2px) hue-rotate(5deg) saturate(0.99) opacity(0.99)\";\n        ctx.drawImage(this.trailLayer.canvas, 0, 0);\n        ctx.filter = \"none\";\n      }\n    );\n\n    this.backgroundLayer.clear();\n    ctx.drawImage(this.backgroundLayer.canvas, 0, 0);\n    ctx.drawImage(this.trailLayer.canvas, 0, 0);\n    ctx.drawImage(this.ballLayer.canvas, 0, 0);\n  }\n\n  private pauseGame() {\n    this.game.pushState(new PauseState(this.game));\n  }\n}\n","import State from \"../types/State\";\n\nexport default class Ball extends State {\n  x: number = 0;\n  y: number = 0;\n  pastPositions: { x: number; y: number }[] = [];\n  xSpeed: number = 0;\n  ySpeed: number = 0;\n  radius: number = 20;\n  color: string = \"#00f\";\n\n  constructor(options?: Partial<Ball>) {\n    super();\n    Object.assign(this, options);\n  }\n\n  onEnter(): void {\n    // do nothing\n  }\n\n  onExit(): void {\n    // do nothing\n  }\n\n  update(delta: number): void {\n    this.pastPositions.push({ x: this.x, y: this.y });\n    if (this.pastPositions.length > 1) {\n      this.pastPositions.shift();\n    }\n\n    this.x += this.xSpeed * delta;\n    this.y += this.ySpeed * delta;\n  }\n\n  render(canvas: HTMLCanvasElement): void {\n    const ctx = canvas.getContext(\"2d\");\n\n    if (!ctx) {\n      throw new Error(\"Cannot get 2d context from canvas\");\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\n","export default abstract class State {\n  canvas!: HTMLCanvasElement;\n  shouldRender = true;\n\n  abstract handleResize(): void;\n  abstract update(delta: number): void;\n  abstract render(canvas: HTMLCanvasElement): void;\n  abstract onEnter(): void;\n  abstract onExit(): void;\n}\n","export default class Layer {\n  public canvas: HTMLCanvasElement;\n  public ctx: CanvasRenderingContext2D | null;\n  backgroundColor?: string;\n\n  constructor(\n    private readonly parentCanvas: HTMLCanvasElement,\n    options?: Partial<Layer>\n  ) {\n    Object.assign(this, options);\n\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    if (!this.ctx) {\n      throw new Error(\"Cannot get 2d context from canvas\");\n    }\n\n    this.handleResize();\n    this.clear();\n  }\n\n  public handleResize() {\n    this.canvas.width = this.parentCanvas.width;\n    this.canvas.height = this.parentCanvas.height;\n  }\n\n  public clear() {\n    if (!this.backgroundColor || !this.ctx) {\n      return;\n    }\n\n    this.ctx.fillStyle = this.backgroundColor;\n    this.ctx.fillRect(0, 0, this.parentCanvas.width, this.parentCanvas.height);\n  }\n\n  withLayer(\n    cb: (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) => void\n  ) {\n    if (!this.ctx) {\n      throw new Error(\"Cannot get 2d context from canvas\");\n    }\n\n    cb(this.canvas, this.ctx);\n\n    return this;\n  }\n}\n","import Efb from \"../main\";\nimport State from \"../types/State\";\n\nexport default class PauseState extends State {\n  constructor(private readonly game: Efb) {\n    super();\n\n    this.canvas = document.createElement(\"canvas\");\n    this.handleKeyup = this.handleKeyup.bind(this);\n  }\n\n  private handleKeyup(e: KeyboardEvent) {\n    if (e.key === \"p\") {\n      this.game.popState();\n    }\n  }\n\n  public handleResize() {\n    this.shouldRender = true; // Allow rendering on resize\n  }\n\n  public onEnter() {\n    document.addEventListener(\"keyup\", this.handleKeyup);\n  }\n\n  public onExit() {\n    document.removeEventListener(\"keyup\", this.handleKeyup);\n  }\n\n  public update(delta: number) {\n    // do nothing\n  }\n\n  public render(canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext(\"2d\");\n\n    if (!ctx) {\n      throw new Error(\"Cannot get 2d context from canvas\");\n    }\n\n    this.game.getPreviousState()?.render(canvas);\n\n    const width = 300;\n    const height = 200;\n\n    // Draw the pause overlay\n    ctx.fillStyle = \"#333\";\n    ctx.shadowColor = \"rgba(0, 0, 0, 0.7)\";\n    ctx.shadowOffsetX = 5;\n    ctx.shadowOffsetY = 5;\n    ctx.shadowBlur = 30;\n    ctx.roundRect(\n      canvas.width / 2 - width / 2,\n      canvas.height / 2 - height / 2,\n      width,\n      height,\n      10\n    );\n    ctx.fill();\n    ctx.shadowColor = \"transparent\"; // Reset shadow\n\n    // Draw the pause text\n    ctx.fillStyle = \"#fff\";\n    ctx.font = \"bold 24px sans-serif\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"Paused\", canvas.width / 2, canvas.height / 2 - 20);\n    ctx.font = \"16px sans-serif\";\n    ctx.fillText(\n      \"Press 'p' to resume\",\n      canvas.width / 2,\n      canvas.height / 2 + 20\n    );\n\n    this.shouldRender = false; // Prevents continuous rendering\n  }\n}\n"],"names":[],"version":3,"file":"main.js.map"}